# Documentation du Projet E-commerce Fleurs

## 1. **Structure du Projet**
Le projet est une boutique en ligne pour la vente de fleurs, dÃ©veloppÃ©e en **Java Servlet, JSP et PostgreSQL** avec **Eclipse**.

### **Arborescence du Projet**
```
EcommerceFleurs/
â”‚â”€â”€ WEB-INF/
â”‚   â”œâ”€â”€ controller/  (Contient les servlets)
â”‚   â”œâ”€â”€ dao/         (Gestion des accÃ¨s aux donnÃ©es)
â”‚   â”œâ”€â”€ model/       (ModÃ¨les des entitÃ©s)
â”‚   â”œâ”€â”€ utils/       (Outils divers)
â”‚   â”œâ”€â”€ lib/         (BibliothÃ¨ques externes)
â”‚   â”œâ”€â”€ web.xml      (Configuration des servlets)
â”‚â”€â”€ views/           (Pages JSP)
â”‚â”€â”€ images/          (Stockage des images de produits)
â”‚â”€â”€ styles/          (CSS pour le design)
â”‚â”€â”€ scripts/         (JS pour les interactions dynamiques)
```

---

## 2. **DÃ©tail des Fichiers Importants**

### **ğŸ”¹ Fichiers Backend (Java)**

#### ğŸ“Œ **AdminServlet.java** (controller)
- **RÃ´le :** GÃ¨re les actions des administrateurs (ajout, modification, suppression de produits, etc.).
- **Principales fonctionnalitÃ©s :**
  - RÃ©cupÃ©ration de la liste des produits et catÃ©gories
  - Ajout et modification de produits
  - Suppression dâ€™un produit
  - Redirection vers les pages JSP appropriÃ©es
- **ProblÃ¨me rencontrÃ© :** AprÃ¨s la modification dâ€™un produit, la redirection reste sur le formulaire de modification au lieu de retourner Ã  `admin.jsp`.

#### ğŸ“Œ **ProduitDAO.java** (dao)
- **RÃ´le :** GÃ¨re lâ€™accÃ¨s Ã  la base de donnÃ©es pour les produits.
- **MÃ©thodes principales :**
  - `getAllProduits()`: RÃ©cupÃ¨re la liste des produits
  - `getProduitById(id)`: RÃ©cupÃ¨re un produit spÃ©cifique
  - `ajouterProduit(produit)`: InsÃ¨re un produit dans la base
  - `modifierProduit(produit)`: Met Ã  jour un produit
  - `supprimerProduit(id)`: Supprime un produit
- **ProblÃ¨me rencontrÃ© :** Encodage des caractÃ¨res (`unmappable character for encoding Cp1252`).

#### ğŸ“Œ **CategorieDAO.java** (dao)
- **RÃ´le :** GÃ¨re les catÃ©gories de produits.
- **MÃ©thodes principales :**
  - `getAllCategories()`: Liste toutes les catÃ©gories
  - `getCategorieById(id)`: RÃ©cupÃ¨re une catÃ©gorie spÃ©cifique
  - `ajouterCategorie(categorie)`: Ajoute une nouvelle catÃ©gorie
  - `modifierCategorie(categorie)`: Met Ã  jour une catÃ©gorie

#### ğŸ“Œ **DatabaseConnection.java** (utils)
- **RÃ´le :** GÃ¨re la connexion Ã  la base de donnÃ©es PostgreSQL.
- **Utilisation :**
  - UtilisÃ© par `ProduitDAO`, `CategorieDAO`, etc.
  - Fournit une connexion unique Ã  PostgreSQL.
- **AmÃ©lioration possible :** Gestion avancÃ©e des exceptions.

---

### **ğŸ”¹ Fichiers Frontend (JSP, CSS, JS)**

#### ğŸ“Œ **produits.jsp** (views)
- **RÃ´le :** Affiche la liste des produits de la boutique.
- **Technologies utilisÃ©es :** JSTL pour l'affichage dynamique des produits.
- **Contenu :**
  - Boucle `<c:forEach>` pour afficher les produits rÃ©cupÃ©rÃ©s de la base.
  - Affichage du nom, prix et image du produit.
  - Lien pour ajouter au panier.

#### ğŸ“Œ **modifierProduit.jsp** (views)
- **RÃ´le :** Formulaire pour modifier un produit existant.
- **ProblÃ¨me rencontrÃ© :** AprÃ¨s soumission du formulaire, reste sur la page au lieu de rediriger vers `admin.jsp`.
- **Solution possible :** VÃ©rifier le `response.sendRedirect("admin.jsp")` aprÃ¨s mise Ã  jour du produit.

#### ğŸ“Œ **admin.jsp** (views)
- **RÃ´le :** Interface de gestion des produits et catÃ©gories pour les administrateurs.
- **Contenu :**
  - Liste des produits avec boutons Modifier/Supprimer.
  - Formulaire pour ajouter de nouveaux produits.
  - Lien vers la gestion des catÃ©gories.

#### ğŸ“Œ **navbar.jsp** (views)
- **RÃ´le :** Barre de navigation commune aux pages.
- **Technologies :** HTML, JSTL (`<c:url>` pour gÃ©rer les liens dynamiquement).

---

## 3. **ProblÃ¨mes rencontrÃ©s et Solutions**

### **ğŸ”¸ 1. Encodage des caractÃ¨res (Cp1252)**
**ProblÃ¨me :** Certains fichiers contiennent des caractÃ¨res non reconnus (`unmappable character for encoding Cp1252`).
**Solution :**
- Convertir tous les fichiers en UTF-8 dans Eclipse : `File` > `Properties` > `Text File Encoding` > `UTF-8`.
- VÃ©rifier que PostgreSQL utilise UTF-8.

### **ğŸ”¸ 2. Redirection aprÃ¨s modification dâ€™un produit**
**ProblÃ¨me :** AprÃ¨s modification dâ€™un produit, on reste sur `modifierProduit.jsp`.
**Solution :**
- VÃ©rifier que la servlet `AdminServlet` utilise bien `response.sendRedirect("admin.jsp")` aprÃ¨s mise Ã  jour.
- Tester si `modifierProduit()` retourne `true` dans `ProduitDAO`.

---

## 4. **Base de DonnÃ©es (PostgreSQL)**
### **Tables principales :**

#### ğŸ“Œ **Table `produits`**
```sql
CREATE TABLE produits (
    id SERIAL PRIMARY KEY,
    nom VARCHAR(255) NOT NULL,
    description TEXT,
    prix DECIMAL(10,2) NOT NULL,
    idCategorie INT REFERENCES categories(id),
    stock INT DEFAULT 0,
    image VARCHAR(255)
);
```

#### ğŸ“Œ **Table `categories`**
```sql
CREATE TABLE categories (
    id SERIAL PRIMARY KEY,
    nom VARCHAR(255) NOT NULL
);
```

---

## 5. **RÃ©sumÃ© des amÃ©liorations possibles**
âœ… Passer tous les fichiers en UTF-8 pour Ã©viter les problÃ¨mes d'encodage.  
âœ… VÃ©rifier que la redirection aprÃ¨s modification fonctionne (`response.sendRedirect("admin.jsp")`).  
âœ… Ajouter un meilleur systÃ¨me de gestion des erreurs en base de donnÃ©es.  
âœ… Mettre en place un systÃ¨me de gestion des sessions pour diffÃ©rencier admin et utilisateur.  

---

Cette documentation rÃ©sume l'essentiel du projet **E-commerce Fleurs**. Si tu veux des dÃ©tails sur un fichier ou une fonctionnalitÃ© spÃ©cifique, fais-moi signe ! ğŸš€

